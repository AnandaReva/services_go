{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/get_bot_conversation_history_table": {
            "post": {
                "description": "This endpoint fetches the conversation history of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Conversation"
                ],
                "summary": "1. Retrieve bot conversation history",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody1",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody1"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/get_bot_conversation_topic_chart": {
            "post": {
                "description": "This endpoint fetches the conversation topic chart of a bot from a backend service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Conversation"
                ],
                "summary": "3. Retrieve bot conversation topic chart",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody3",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody3"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/get_bot_executive_summary": {
            "post": {
                "description": "This endpoint fetches the executive summary of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Conversation"
                ],
                "summary": "2. Retrieve bot executive summary",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody2",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody2"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/get_bot_internal_greeting": {
            "post": {
                "description": "This endpoint fetchs the  internal greeting of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Internal"
                ],
                "summary": "7. Get bot internal Greeting",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody7",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody7"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/get_bot_internal_knowledge": {
            "post": {
                "description": "This endpoint fetches the  internal konwledge of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Internal"
                ],
                "summary": "5. Retrieve bot internal konwledge",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody5",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody5"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/get_initial_data": {
            "post": {
                "description": "This endpoint fetchs the  initial data a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Inital Data"
                ],
                "summary": "9. Get bot initial data",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody9",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody9"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/update_bot_internal_greeting": {
            "post": {
                "description": "This endpoint updates the  internal greeting of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Internal"
                ],
                "summary": "8. Update bot internal greeting",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody8",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody8"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/update_bot_internal_knowledge": {
            "post": {
                "description": "This endpoint updates the  internal konwledge of a bot from a backend service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot Internal"
                ],
                "summary": "6. Update bot internal konwledge",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody6",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.requestBody6"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID for authentication",
                        "name": "ecwx-session-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash for request validation",
                        "name": "ecwx-hash",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Data1": {
            "type": "object",
            "required": [
                "bot_id",
                "direction",
                "page",
                "row_length",
                "sort_column"
            ],
            "properties": {
                "row_length": {
                    "description": "x-order=1 untuk RowLength",
                    "type": "integer",
                    "x-order": "1"
                },
                "page": {
                    "description": "x-order=2 untuk Page",
                    "type": "integer",
                    "x-order": "2"
                },
                "sort_column": {
                    "description": "x-order=3 untuk SortColumn",
                    "type": "integer",
                    "x-order": "3"
                },
                "direction": {
                    "description": "x-order=4 untuk Direction",
                    "type": "string",
                    "x-order": "4"
                },
                "bot_id": {
                    "description": "x-order=5 untuk BotID",
                    "type": "string",
                    "x-order": "5"
                }
            }
        },
        "controllers.Data2": {
            "type": "object",
            "required": [
                "bot_id"
            ],
            "properties": {
                "bot_id": {
                    "description": "x-order=5 untuk BotID",
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "controllers.Data3": {
            "type": "object",
            "required": [
                "bot_id"
            ],
            "properties": {
                "bot_id": {
                    "description": "x-order=5 untuk BotID",
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "controllers.requestBody1": {
            "type": "object",
            "required": [
                "data",
                "date_mode",
                "from_date",
                "to_date"
            ],
            "properties": {
                "data": {
                    "description": "x-order=1 untuk Data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/controllers.Data1"
                        }
                    ],
                    "x-order": "1"
                },
                "from_date": {
                    "description": "x-order=3 untuk FromDate",
                    "type": "integer",
                    "x-order": "3"
                },
                "to_date": {
                    "description": "x-order=4 untuk ToDate",
                    "type": "integer",
                    "x-order": "4"
                },
                "search_filter": {
                    "description": "Max 50 karakter, x-order=5 untuk SearchFilter",
                    "type": "string",
                    "maxLength": 50,
                    "x-order": "5"
                },
                "date_mode": {
                    "description": "x-order=6 untuk DateMode",
                    "type": "integer",
                    "x-order": "6"
                }
            }
        },
        "controllers.requestBody2": {
            "type": "object",
            "required": [
                "data",
                "date_mode",
                "from_date",
                "to_date"
            ],
            "properties": {
                "data": {
                    "description": "x-order=1 untuk Data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/controllers.Data2"
                        }
                    ],
                    "x-order": "1"
                },
                "from_date": {
                    "description": "x-order=3 untuk FromDate",
                    "type": "integer",
                    "x-order": "3"
                },
                "to_date": {
                    "description": "x-order=4 untuk ToDate",
                    "type": "integer",
                    "x-order": "4"
                },
                "date_mode": {
                    "description": "x-order=6 untuk DateMode",
                    "type": "integer",
                    "x-order": "6"
                }
            }
        },
        "controllers.requestBody3": {
            "type": "object",
            "required": [
                "data",
                "date_mode",
                "from_date",
                "to_date"
            ],
            "properties": {
                "data": {
                    "description": "x-order=1 untuk Data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/controllers.Data3"
                        }
                    ],
                    "x-order": "1"
                },
                "from_date": {
                    "description": "x-order=3 untuk FromDate",
                    "type": "integer",
                    "x-order": "3"
                },
                "to_date": {
                    "description": "x-order=4 untuk ToDate",
                    "type": "integer",
                    "x-order": "4"
                },
                "search_filter": {
                    "description": "Max 50 karakter, x-order=5 untuk SearchFilter",
                    "type": "string",
                    "maxLength": 50,
                    "x-order": "5"
                },
                "date_mode": {
                    "description": "x-order=6 untuk DateMode",
                    "type": "integer",
                    "x-order": "6"
                }
            }
        },
        "controllers.requestBody5": {
            "type": "object",
            "required": [
                "bot_id"
            ],
            "properties": {
                "bot_id": {
                    "description": "x-order=5 untuk BotID",
                    "type": "string",
                    "x-order": "5"
                }
            }
        },
        "controllers.requestBody6": {
            "type": "object",
            "required": [
                "bot_id",
                "child_prompt_id",
                "classification_name",
                "knowledge_text"
            ],
            "properties": {
                "bot_id": {
                    "type": "string",
                    "x-order": "1"
                },
                "child_prompt_id": {
                    "type": "string",
                    "x-order": "2"
                },
                "knowledge_text": {
                    "type": "string",
                    "x-order": "3"
                },
                "classification_name": {
                    "type": "string",
                    "x-order": "4"
                }
            }
        },
        "controllers.requestBody7": {
            "type": "object",
            "required": [
                "bot_id"
            ],
            "properties": {
                "bot_id": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "controllers.requestBody8": {
            "type": "object",
            "required": [
                "bot_id",
                "greeting",
                "topics"
            ],
            "properties": {
                "bot_id": {
                    "type": "string",
                    "x-order": "1"
                },
                "greeting": {
                    "type": "string",
                    "x-order": "2"
                },
                "topics": {
                    "type": "string",
                    "x-order": "3"
                }
            }
        },
        "controllers.requestBody9": {
            "type": "object",
            "required": [
                "bot_id"
            ],
            "properties": {
                "bot_id": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        }
    }
}